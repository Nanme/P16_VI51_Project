/**
 * 
 */
package fr.utbm.vi51.prj.drone.ia.agt

import fr.utbm.vi51.prj.drone.framework.math.Point2f
import fr.utbm.vi51.prj.drone.framework.math.Vector2f
import fr.utbm.vi51.prj.drone.ia.^behavior.DynamicType
import fr.utbm.vi51.prj.drone.ia.^behavior.SteeringAlignBehaviour
import fr.utbm.vi51.prj.drone.ia.^behavior.SteeringSeekBehaviour
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Initialize
import io.sarl.core.Lifecycle

agent drone extends AbstractOVNI{
	uses  Lifecycle, DefaultContextInteractions
		
	var seekBehaviour : SteeringSeekBehaviour
	var alignBehaviour : SteeringAlignBehaviour
	
	
	on Initialize{
		super._handle_Initialize_0(occurrence) 
		emit(new agentReady)
		//println(" drone : Je m'initialise")
	}
	on Perception{
			var _position = new Point2f(occurrence.body.getBody().getX(),occurrence.body.getBody().getZ());
			var _length = occurrence.body.currentLinearMotion.length
			var _maxLinearAcceleration = occurrence.body.maxLinearAcceleration
			var _targetPosition = new Point2f(30,30);
			
			this.seekBehaviour = new SteeringSeekBehaviour
			var o1 = this.seekBehaviour.runSeek(
				_position,
				_length,
				_maxLinearAcceleration,
				_targetPosition);

			var _angle = occurrence.body.getLinearVelocity();
			var _maxAngularSpeed = occurrence.body.getCurrentAngularSpeed
			var _maxAngular = occurrence.body.getMaxAngularSpeed
			var _targetOrientatoin = new Vector2f(1,1);
			
			this.alignBehaviour = new SteeringAlignBehaviour(2, 3, 4)
			var o2 = this.alignBehaviour.runAlign(
				_angle,
				_maxAngularSpeed,
				_maxAngular,
				_targetOrientatoin);
				
			var o3 = new BehaviorOutput(null, o1.linear, o2.angular, DynamicType::STEERING);
			o3.emitInfluence(occurrence.time)

	}
}